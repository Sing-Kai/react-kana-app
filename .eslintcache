[{"C:\\Users\\lj3159\\Desktop\\React\\Prototype\\client\\src\\index.js":"1","C:\\Users\\lj3159\\Desktop\\React\\Prototype\\client\\src\\App.js":"2","C:\\Users\\lj3159\\Desktop\\React\\Prototype\\client\\src\\reportWebVitals.js":"3","C:\\Users\\lj3159\\Desktop\\React\\Prototype\\client\\src\\components\\Home.js":"4","C:\\Users\\lj3159\\Desktop\\React\\Prototype\\client\\src\\quizService\\index.js":"5","C:\\Users\\lj3159\\Desktop\\React\\Prototype\\client\\src\\components\\Quiz.js":"6","C:\\Users\\lj3159\\Desktop\\React\\Prototype\\client\\src\\components\\Question.js":"7","C:\\Users\\lj3159\\Desktop\\React\\Prototype\\client\\src\\components\\Answer.js":"8","C:\\Users\\lj3159\\Desktop\\React\\Prototype\\client\\src\\components\\Settings.js":"9"},{"size":500,"mtime":499162500000,"results":"10","hashOfConfig":"11"},{"size":659,"mtime":1614631418700,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"11"},{"size":432,"mtime":1614632256592,"results":"14","hashOfConfig":"11"},{"size":2219,"mtime":1613252156979,"results":"15","hashOfConfig":"11"},{"size":1907,"mtime":1614530403358,"results":"16","hashOfConfig":"11"},{"size":387,"mtime":1614640024238,"results":"17","hashOfConfig":"11"},{"size":1265,"mtime":1614524055707,"results":"18","hashOfConfig":"11"},{"size":1303,"mtime":1614639167347,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"k4ktd1",{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"C:\\Users\\lj3159\\Desktop\\React\\Prototype\\client\\src\\index.js",[],["44","45"],"C:\\Users\\lj3159\\Desktop\\React\\Prototype\\client\\src\\App.js",["46"],"import './App.css';\nimport Home from \"./components/Home\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport QuizContent from \"./components/Quiz\";\nimport Settings from \"./components/Settings\";\n\nfunction App() {\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Switch>\n            <Route path=\"/quiz\">\n              <QuizContent />\n            </Route>\n            <Route path=\"/settings\">\n              <Settings />\n            </Route>            \n            <Route exact path=\"/\">\n              <Home />\n            </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","C:\\Users\\lj3159\\Desktop\\React\\Prototype\\client\\src\\reportWebVitals.js",[],"C:\\Users\\lj3159\\Desktop\\React\\Prototype\\client\\src\\components\\Home.js",["47"],"\r\nimport React, { Component } from 'react'\r\nimport {\r\n  BrowserRouter as Router,\r\n  Link\r\n} from \"react-router-dom\";\r\n\r\n\r\nexport default class Home extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Home</h1>\r\n          <div>\r\n            <Link to='/quiz'>Start Quiz</Link>\r\n          </div>\r\n          <div>\r\n            <Link to='/settings'>Settings</Link>\r\n          </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","C:\\Users\\lj3159\\Desktop\\React\\Prototype\\client\\src\\quizService\\index.js",["48"],"const qBank = []\r\n\r\nconst hirigana = [\r\n\r\n  {\r\n    id: 1,\r\n    char: 'A'\r\n  },\r\n\r\n  {\r\n    id: 2,\r\n    char: 'B'\r\n  },\r\n\r\n  {\r\n    id: 3,\r\n    char: 'C'\r\n  },\r\n\r\n  {\r\n    id: 4,\r\n    char: 'D'\r\n  },\r\n\r\n  {\r\n    id: 5,\r\n    char: 'E'\r\n  },\r\n\r\n  {\r\n    id: 6,\r\n    char: 'F'\r\n  },\r\n  {\r\n    id: 7,\r\n    char: 'G'\r\n  },\r\n  {\r\n    id: 8,\r\n    char: 'H'\r\n  }\r\n]\r\n\r\nconst test = [\r\n  {\r\n    questionId: 0,\r\n\r\n    question: [{\r\n      id: 1,\r\n      char: 'A'\r\n    }],\r\n\r\n    answers: [  {\r\n      id: 6,\r\n      char: 'F'\r\n    },\r\n    {\r\n      id: 1,\r\n      char: 'A'\r\n    },\r\n    {\r\n      id: 8,\r\n      char: 'H'\r\n    }]\r\n\r\n  }\r\n]\r\n\r\nclass QuestionObj{\r\n\r\n  constructor(questionId, question, answers){\r\n    this.questionId = questionId;  \r\n    this.question = question;\r\n    this.answers = answers \r\n  }\r\n}\r\n\r\nfunction createQBank(){\r\n\r\n  const numberOfQuestions = 3;\r\n  const numberOfAns = 3\r\n\r\n  for(var i=0; i< numberOfQuestions; i++){\r\n\r\n    var answers = getAnswers(numberOfAns);\r\n    var question = answers[Math.floor(Math.random() * answers.length)];\r\n    var q = new QuestionObj(i, question, answers)\r\n    qBank.push(q);\r\n  }\r\n\r\n  \r\n}\r\n\r\nfunction getAnswers(numberOfAns){\r\n\r\n  const answers = [];\r\n  const clonedArray = JSON.parse(JSON.stringify(hirigana))\r\n  let res = shuffle(clonedArray);\r\n\r\n  for(var i=0; i< numberOfAns; i++){\r\n    const randAns = res[Math.floor(Math.random() * res.length)];\r\n    res = res.filter(item => item.id !== randAns.id);\r\n    answers.push(randAns);\r\n  }\r\n\r\n  return answers;\r\n}\r\n\r\nconst getQuiz = () =>{\r\n  const data = createQBank();\r\n  return data;\r\n\r\n}\r\n\r\nfunction shuffle(array) {\r\n  var currentIndex = array.length, temporaryValue, randomIndex;\r\n\r\n  // While there remain elements to shuffle...\r\n  while (0 !== currentIndex) {\r\n\r\n    // Pick a remaining element...\r\n    randomIndex = Math.floor(Math.random() * currentIndex);\r\n    currentIndex -= 1;\r\n\r\n    // And swap it with the current element.\r\n    temporaryValue = array[currentIndex];\r\n    array[currentIndex] = array[randomIndex];\r\n    array[randomIndex] = temporaryValue;\r\n  }\r\n\r\n  return array;\r\n}\r\n\r\nexport default getQuiz;\r\n\r\n// export default (n = 5) => Promise.resolve(qBank.sort(() => 0.5 - Math.random()).slice(0, n));",["49","50"],"C:\\Users\\lj3159\\Desktop\\React\\Prototype\\client\\src\\components\\Quiz.js",["51","52","53","54"],"import React, {useState, useEffect} from 'react'\r\nimport QuizData from '../assets/data.json'\r\nimport Answer from './Answer';\r\nimport Question from \"./Question\";\r\nimport {useQuery, QueryClient, QueryClientProvider}from 'react-query';\r\nimport axios from 'axios'\r\n\r\nconst queryClient = new QueryClient();\r\n\r\n// const QuizContent = () => {\r\n//   // const {inputText} = useSearch();\r\n//   const inputText = \"testing\"\r\n//   // if(inputText === \"\") return <div className = \"search-term\"></div>\r\n//   return (\r\n//     <QueryClientProvider client ={queryClient}>\r\n//       <Quiz initialIsOpen={false}/> \r\n//     </QueryClientProvider>\r\n//   );\r\n// }\r\n\r\nconst QuizContent = () => {\r\n\r\n  const [quiz, setQuiz] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const response = await axios('http://localhost:8080/quiz');\r\n      var quiz = response.data;\r\n      setQuiz(quiz);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  if (quiz === undefined || quiz.length === 0){\r\n    console.log('Loading Quiz')\r\n    return (<div>Loading Quizz</div>)\r\n  }\r\n  return (<div><Quiz qdata = {quiz}/></div>)\r\n}\r\n\r\nconst Quiz = ({qdata}) =>{\r\n\r\n  const [questionId, setQuestionId] = useState(0);\r\n  const data = qdata;\r\n  const answerClick =(id)=>{\r\n\r\n    if(id === data[questionId].question.id){\r\n      const next = questionId +1 % data.length\r\n      setQuestionId(next);\r\n    }\r\n  }\r\n\r\n  if (data.length === questionId) {\r\n    return (<div>Finished </div>)\r\n  }\r\n\r\n  return(\r\n\r\n    <div >\r\n      <Question question = {data[questionId].question}/>\r\n\r\n      <div className=\"answers\">\r\n        {data[questionId].answers.map((ans) => \r\n        (<Answer key = {ans.id} \r\n                 id = {ans.id} \r\n                 kana ={ans.hiri} \r\n                 questionId={data[questionId].question.id} \r\n                 answerClick ={answerClick}/>))}\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default QuizContent","C:\\Users\\lj3159\\Desktop\\React\\Prototype\\client\\src\\components\\Question.js",[],"C:\\Users\\lj3159\\Desktop\\React\\Prototype\\client\\src\\components\\Answer.js",[],"C:\\Users\\lj3159\\Desktop\\React\\Prototype\\client\\src\\components\\Settings.js",[],{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":7,"column":3,"nodeType":"61","messageId":"62","endLine":7,"endColumn":7},{"ruleId":"59","severity":1,"message":"63","line":4,"column":20,"nodeType":"61","messageId":"62","endLine":4,"endColumn":26},{"ruleId":"59","severity":1,"message":"64","line":44,"column":7,"nodeType":"61","messageId":"62","endLine":44,"endColumn":11},{"ruleId":"55","replacedBy":"65"},{"ruleId":"57","replacedBy":"66"},{"ruleId":"59","severity":1,"message":"67","line":2,"column":8,"nodeType":"61","messageId":"62","endLine":2,"endColumn":16},{"ruleId":"59","severity":1,"message":"68","line":5,"column":9,"nodeType":"61","messageId":"62","endLine":5,"endColumn":17},{"ruleId":"59","severity":1,"message":"69","line":5,"column":32,"nodeType":"61","messageId":"62","endLine":5,"endColumn":51},{"ruleId":"59","severity":1,"message":"70","line":8,"column":7,"nodeType":"61","messageId":"62","endLine":8,"endColumn":18},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Router' is defined but never used.","'test' is assigned a value but never used.",["71"],["72"],"'QuizData' is defined but never used.","'useQuery' is defined but never used.","'QueryClientProvider' is defined but never used.","'queryClient' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]